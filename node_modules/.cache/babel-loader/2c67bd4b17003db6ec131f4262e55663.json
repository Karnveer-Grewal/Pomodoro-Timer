{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karnv\\\\Thinkful\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\SessionTimer.js\";\nimport React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction SessionTimer({\n  session,\n  isTimerRunning,\n  focusDuration,\n  breakDuration\n}) {\n  if (session) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, minutesToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, !isTimerRunning ? \"PAUSED\" : null)));\n  } else {\n    return null;\n  }\n}\n\nexport default SessionTimer;","map":{"version":3,"sources":["C:/Users/karnv/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SessionTimer.js"],"names":["React","minutesToDuration","SessionTimer","session","isTimerRunning","focusDuration","breakDuration","label","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,cAFoB;AAGpBC,EAAAA,aAHoB;AAIpBC,EAAAA;AAJoB,CAAtB,EAKG;AACD,MAAIH,OAAJ,EAAa;AACX,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEI,KADZ,UACuB,GADvB,EAEG,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,KAAT,MAAmB,UAAnB,GACGN,iBAAiB,CAACI,aAAD,CADpB,GAEGJ,iBAAiB,CAACK,aAAD,CAJvB,EAIwC,GAJxC,YAFF,eAUE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,aAAV,CADpB,eAVF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,CAACJ,cAAD,GAAkB,QAAlB,GAA6B,IAAjC,CAbF,CADF,CADF;AAmBD,GApBD,MAoBO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeF,YAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\nfunction SessionTimer({\r\n  session,\r\n  isTimerRunning,\r\n  focusDuration,\r\n  breakDuration,\r\n}) {\r\n  if (session) {\r\n    return (\r\n      <>\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label} for{\" \"}\r\n            {session?.label === \"Focusing\"\r\n              ? minutesToDuration(focusDuration)\r\n              : minutesToDuration(breakDuration)}{\" \"}\r\n            minutes\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {minutesToDuration(session?.timeRemaining)} remaining\r\n          </p>\r\n          <p>{!isTimerRunning ? \"PAUSED\" : null}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SessionTimer;\r\n"]},"metadata":{},"sourceType":"module"}