{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karnv\\\\Thinkful\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  const focusDurationSec = focusDuration * 60;\n  const focusDecimal = 1 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / focusDurationSec;\n  const focusPercentage = focusDecimal * 100;\n  const breakDurationSec = breakDuration * 60;\n  const breakDecimal = 1 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / breakDurationSec;\n  const breakPercentage = breakDecimal * 100;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusPercentage : breakPercentage\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/karnv/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","session","focusDuration","breakDuration","focusDurationSec","focusDecimal","timeRemaining","focusPercentage","breakDurationSec","breakDecimal","breakPercentage","height","width","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAArB,EAAgE;AAC9D,QAAMC,gBAAgB,GAAGF,aAAa,GAAG,EAAzC;AACA,QAAMG,YAAY,GAAG,IAAI,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,aAAT,IAAyBF,gBAAlD;AACA,QAAMG,eAAe,GAAGF,YAAY,GAAG,GAAvC;AACA,QAAMG,gBAAgB,GAAGL,aAAa,GAAG,EAAzC;AACA,QAAMM,YAAY,GAAG,IAAI,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,aAAT,IAAyBE,gBAAlD;AACA,QAAME,eAAe,GAAGD,YAAY,GAAG,GAAvC;AAEA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EACH,CAAAX,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEY,KAAT,MAAmB,UAAnB,GACIN,eADJ,GAEIG;AAJD,KANT,CAWK;AAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAqBD;;AAED,eAAeV,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction ProgressBar({ session, focusDuration, breakDuration }) {\r\n  const focusDurationSec = focusDuration * 60;\r\n  const focusDecimal = 1 - session?.timeRemaining / focusDurationSec;\r\n  const focusPercentage = focusDecimal * 100;\r\n  const breakDurationSec = breakDuration * 60;\r\n  const breakDecimal = 1 - session?.timeRemaining / breakDurationSec;\r\n  const breakPercentage = breakDecimal * 100;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col\">\r\n        <div className=\"progress\" style={{ height: \"20px\" }}>\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\r\n            style={{\r\n              width:\r\n                session?.label === \"Focusing\"\r\n                  ? focusPercentage\r\n                  : breakPercentage,\r\n            }} // TODO: Increase width % as elapsed time increases\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n"]},"metadata":{},"sourceType":"module"}