{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karnv\\\\Thinkful\\\\qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  session,\n  focusDuration\n}) {\n  const focusDurationSeconds = focusDuration * 60;\n  const secondsDivided = 1 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / focusDurationSeconds;\n  const secondsDividedPercentage = secondsDivided * 100;\n  console.log(secondsDividedPercentage);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: {\n        secondsDividedPercentage\n      }\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/karnv/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","session","focusDuration","focusDurationSeconds","secondsDivided","timeRemaining","secondsDividedPercentage","console","log","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArB,EAAiD;AAC/C,QAAMC,oBAAoB,GAAGD,aAAa,GAAG,EAA7C;AACA,QAAME,cAAc,GAAG,IAAI,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,aAAT,IAAyBF,oBAApD;AACA,QAAMG,wBAAwB,GAAGF,cAAc,GAAG,GAAlD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,wBAAZ;AACA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA;AAAF;AADF,KANT,CAQK;AARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAkBD;;AAED,eAAeN,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction ProgressBar({ session, focusDuration }) {\r\n  const focusDurationSeconds = focusDuration * 60;\r\n  const secondsDivided = 1 - session?.timeRemaining / focusDurationSeconds;\r\n  const secondsDividedPercentage = secondsDivided * 100;\r\n  console.log(secondsDividedPercentage);\r\n  return (\r\n    <>\r\n      <div className=\"col\">\r\n        <div className=\"progress\" style={{ height: \"20px\" }}>\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\r\n            style={{\r\n              width: { secondsDividedPercentage },\r\n            }} // TODO: Increase width % as elapsed time increases\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n"]},"metadata":{},"sourceType":"module"}